const TelegramApi = require('node-telegram-bot-api')

const token = '5057479971:AAGfRmHycEhBw8pEHNIZv81Ayifws3qXZZI'

const bot = new TelegramApi(token ,{polling:true})

const http = require('http')
const fs  = require('fs')

const chats = {}

async function getWeather(chatId,city){
  http.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=299a04aaaa8058639e479e39607c97a5`, function (response) {   
    var buffer = "", 
        data,
        route;
  
    response.on("data", function (chunk) {
        buffer += chunk;
    }); 
    response.on("end",  function (err) {
        data = JSON.parse(buffer);
        if(data.message == 'city not found'){
          return bot.sendMessage(chatId,`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π`)
        }
        console.log(data)
        let temperature = data.main.temp
        return bot.sendMessage(chatId,`–°–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ ${city} —Ä–∞–≤–Ω–∞ ${Math.round(temperature - 273)} ‚ùÑ`) 
    }); 
  }); 
}

const file = JSON.parse(fs.readFileSync('russia.json','utf-8'))

const Options = {
  reply_markup:{
    keyboard:[
      ["–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"]
    ]
  }
}
const kOptions = {
  reply_markup:{
    keyboard:[
      ['']
    ]
  }
}

const startGame = async ( chatId) => {
  await bot.sendMessage(chatId, '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç "0" –¥–æ "9"')
  const randomNumber = Math.floor(Math.random() * 10)
  chats[chatId] = randomNumber
  await bot.sendMessage(chatId , '–û—Ç–≥–∞–¥—ã–≤–∞–π' , gameOptions)
}

const start = () => {
  bot.setMyCommands([
    {command:'/start' , description:'–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞'},
    {command:'/info' , description:'–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ'},
  ])
  
  bot.on('message' , async (msg) => {
    const text = msg.text
    const chatId = msg.chat.id
    if(text == '/start'){
      return bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å \u270B \n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ \u2601 ',Options)
    }
    if(text == '/info'){
      return bot.sendMessage(chatId, '–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    }
    if(text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É'){
      return bot.sendMessage(chatId,'–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ üåÜ\n–ö–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ - Moscow',kOptions)
    }
    return getWeather(chatId,text)
  })

  bot.on('callback_query' , async (msg) => {
    const data = msg.data
    const chatId = msg.message.chat.id
    console.log(chats)
    console.log(chatId , data)
    if(data === '/again'){
      return startGame(chatId)
    }
    if(data == chats[chatId]){
      return bot.sendMessage(chatId , '–¢—ã —É–≥–∞–¥–∞–ª' , againOptions)
    }else{
      return bot.sendMessage(chatId , '–ù–µ —É–≥–∞–¥–∞–ª' , againOptions)
    }
  })
}

start()